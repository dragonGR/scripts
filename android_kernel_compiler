#!/bin/bash

# Define color variables for bright green and reset
BOLD_BRIGHT_GREEN="\e[1;92m"
RESET="\e[0m"

# Function to print messages in bright green
function print_green {
    echo -e "${BOLD_BRIGHT_GREEN}$1${RESET}"
}

# Function to print error messages
function print_error {
    echo -e "\e[1;91m$1\e[0m"  # Bright red color for errors
}

# Define kernel build settings
export ARCH="arm64"
export SUBARCH="$ARCH"
KERNEL_DIR="/path/to/kernel"  # Replace with actual kernel path
OUT_DIR="${KERNEL_DIR}/out"
DEFCONFIG="defconfig"

# Define paths for toolchains
CLANG_PATH="$HOME/toolchains/neutron-clang/bin"
CROSS_COMPILE="aarch64-linux-gnu-"
CROSS_COMPILE_ARM32="arm-linux-gnueabi-"

# Add Neutron Clang toolchain to PATH
export PATH="${CLANG_PATH}:${PATH}"

# Log the build process start
print_green "Starting Tequila Kernel compilation..."

# Check if kernel directory exists and enter it
if [[ -d "$KERNEL_DIR" ]]; then
    cd "$KERNEL_DIR" || { print_error "Failed to enter kernel directory: $KERNEL_DIR"; exit 1; }
else
    print_error "The specified kernel directory \"$KERNEL_DIR\" does not exist. Please check the path."
    exit 1
fi

# Clean previous builds (optional)
make mrproper || { print_error "Failed to clean previous builds. Exiting..."; exit 1; }

# Load default configuration
make O="$OUT_DIR" ARCH="$ARCH" "$DEFCONFIG" || { print_error "Failed to load defconfig. Exiting..."; exit 1; }

# Start kernel compilation with Neutron Clang toolchain
print_green "Starting compilation with Neutron Clang..."
make -j$(nproc) O="$OUT_DIR" \
    ARCH="$ARCH" \
    CC=clang \
    CROSS_COMPILE="$CROSS_COMPILE" \
    CROSS_COMPILE_ARM32="$CROSS_COMPILE_ARM32" || { print_error "Kernel compilation failed!"; exit 1; }

# Handle interruption gracefully (e.g., Ctrl+C)
trap 'print_error "Aborting..."; rm -rf "$OUT_DIR"; exit 1' SIGINT

# Final message
print_green "Tequila Kernel compilation complete!"
