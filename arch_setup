#!/bin/bash

# Define color variables for bright green and reset
BOLD_BRIGHT_GREEN="\e[1;92m"
RESET="\e[0m"

# Clear the terminal
clear

# Function to print messages in bright green
function print_green {
    echo -e "${BOLD_BRIGHT_GREEN}$1${RESET}"
}

# Update the system
print_green "Updating the system..."
sudo pacman -Syu --noconfirm && print_green "System updated successfully!" || { echo "System update failed."; exit 1; }

# Install basic packages from official repositories
print_green "Installing basic packages from official repositories..."
sudo pacman --needed -S firefox python-pip poetry telegram-desktop meld \
    git git-lfs wget curl base-devel gnupg gcc clang flex bison ttf-fira-code \
    zip curl unzip fontconfig libxcrypt-compat ccache gnome-browser-connector --noconfirm && print_green "Basic packages installed!" || print_green "Some packages were already installed or up to date."

# Alt+Shift language switcher setup
print_green "Time to bring the traditional Alt+Shift language switcher for GNOME back..."
gsettings set org.gnome.desktop.wm.keybindings switch-input-source "['<Shift>Alt_L']" && \
gsettings set org.gnome.desktop.wm.keybindings switch-input-source-backward "['<Alt>Shift_L']" && \
print_green "Alt+Shift language switcher set up successfully!" || { echo "Failed to set up language switcher."; exit 1; }

# Increase audio volume limit from 100% to 150%
print_green "Increasing audio volume limit from 100% to 150%..."
gsettings set org.gnome.desktop.sound allow-volume-above-100-percent 'true' && print_green "Audio volume limit increased successfully!" || { echo "Failed to increase audio volume limit."; exit 1; }

# Enable nano syntax highlighting
print_green "Enabling nano syntax highlighting..."
find /usr/share/nano/ -iname "*.nanorc" -exec echo include {} \; >> ~/.nanorc && print_green "Nano syntax highlighting enabled!" || { echo "Failed to enable nano syntax highlighting."; exit 1; }

# Install 'yay' AUR helper
print_green "Installing 'yay' AUR helper..."
if ! command -v yay &> /dev/null
then
    sudo pacman --needed -S git base-devel --noconfirm
    git clone https://aur.archlinux.org/yay.git && cd yay
    makepkg -si --noconfirm && print_green "Yay installed!" || { echo "Yay installation failed."; exit 1; }
    cd ..
    rm -rf yay
else
    print_green "'Yay' is already installed."
fi

# Install AUR packages using yay
print_green "Installing AUR packages..."
yay -S --noconfirm aosp-devel lineageos-devel spotify-edge visual-studio-code-bin && print_green "AUR packages installed!" || print_green "Some AUR packages were already installed or up to date."

# Clear terminal and final message
clear
print_green "All done!"
